# This workflow will build and push a .NET Core 3.0 application to an Azure Web App on every push to the the "dev" branch.
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE_DEV with the value of your Azure publish profile.
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: Build And Deploy PACT Dev Branch to Dev App Service
on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  AZURE_WEBAPP_NAME: 'gitworkflowsdev'    # set this to your Azure App Service name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Build with dotnet
      working-directory: './'
      run: dotnet build --configuration Release
    - name: dotnet publish
      working-directory: './'
      run: |
        dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/pactwebapp
    - name: 'Deploy to dev.PactCloud.com'
      uses: azure/webapps-deploy@v1
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}
        package: ${{env.DOTNET_ROOT}}/pactwebapp
